@import "tailwindcss";

@font-face {
  font-family: minecraft;
  src: url("/fonts/Minecraft.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
  font-display: optional; /* Use fallback font if custom font isn't loaded quickly */
}

@layer base {
  h1,
  h2,
  h3,
  button,
  a,
  label,
  span {
    font-family: var(--font-minecraft);
  }

  :root {
    --font-minecraft: "minecraft", sans-serif;
    --background: 0 0% 100%;
    --foreground: 0 0% 10%;
    --primary: 0 0% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 10%;
    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;
    --accent: 143.1 47.4% 73.1%;
    --accent-foreground: 0 0% 10%;
    --pastel-mint: 143.1 47.4% 73.1%;
    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: 0 0% 10%;
    --radius: 0rem;
  }

  .dark {
    --background: 0 0% 10%;
    --foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 10%;
    --secondary: 0 0% 18%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 18%;
    --muted-foreground: 0 0% 60%;
    --accent: 165 60% 85%;
    --accent-foreground: 0 0% 10%;
    --pastel-mint: 143.1 47.4% 73.1%;
    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 20%;
    --input: 0 0% 20%;
    --ring: 0 0% 98%;
  }

  * {
    border-color: hsl(var(--border));
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

@layer utilities {
  /* Keyframes */
  @keyframes fade-in {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes scale-in {
    0% {
      transform: scale(0.95);
      opacity: 0;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
  @keyframes float {
    0%,
    100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  /* Color utilities */
  .text-pastel-mint {
    color: hsl(var(--pastel-mint));
  }
  .text-foreground {
    color: hsl(var(--foreground));
  }
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  .text-primary {
    color: hsl(var(--primary));
  }
  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }
  .text-secondary {
    color: hsl(var(--secondary));
  }
  .text-secondary-foreground {
    color: hsl(var(--secondary-foreground));
  }
  .text-destructive {
    color: hsl(var(--destructive));
  }
  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }
  .text-accent {
    color: hsl(var(--accent));
  }
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }

  .bg-background {
    background-color: hsl(var(--background));
  }
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  .bg-pastel-mint {
    background-color: hsl(var(--pastel-mint));
  }
  .bg-primary {
    background-color: hsl(var(--primary));
  }
  .bg-primary-foreground {
    background-color: hsl(var(--primary-foreground));
  }
  .bg-secondary {
    background-color: hsl(var(--secondary));
  }
  .bg-secondary-foreground {
    background-color: hsl(var(--secondary-foreground));
  }
  .bg-destructive {
    background-color: hsl(var(--destructive));
  }
  .bg-destructive-foreground {
    background-color: hsl(var(--destructive-foreground));
  }
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  .bg-accent-foreground {
    background-color: hsl(var(--accent-foreground));
  }

  .border-border {
    border-color: hsl(var(--border));
  }
  .border-input {
    border-color: hsl(var(--input));
  }
  .ring-ring {
    --tw-ring-color: hsl(var(--ring));
  }
  .ring-offset-background {
    --tw-ring-offset-color: hsl(var(--background));
  }

  /* Hover effects */
  .hover\:bg-primary\/90:hover {
    background-color: hsl(var(--primary) / 0.9);
  }
  .hover\:bg-destructive\/90:hover {
    background-color: hsl(var(--destructive) / 0.9);
  }
  .hover\:bg-secondary\/80:hover {
    background-color: hsl(var(--secondary) / 0.8);
  }
  .hover\:bg-accent:hover {
    background-color: hsl(var(--accent));
  }
  .hover\:text-accent-foreground:hover {
    color: hsl(var(--accent-foreground));
  }
  .hover\:bg-pastel-mint\/80:hover {
    background-color: hsl(var(--pastel-mint) / 0.8);
  }
  .hover\:underline:hover {
    text-decoration: underline;
  }

  /* Focus states */
  .focus-visible\:outline-none:focus-visible {
    outline: none;
  }
  .focus-visible\:ring-2:focus-visible {
    --tw-ring-width: 2px;
  }
  .focus-visible\:ring-ring:focus-visible {
    --tw-ring-color: hsl(var(--ring));
  }
  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
  }

  /* Additional utilities */
  .transition-colors {
    transition-property:
      color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }
  .disabled\:opacity-50:disabled {
    opacity: 0.5;
  }

  /* Animations */
  .animate-fade-in {
    animation: fade-in 0.5s ease-out;
  }
  .animate-scale-in {
    animation: scale-in 0.3s ease-out;
  }
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  .animate-shimmer {
    animation: shimmer 2s linear infinite;
  }
}
